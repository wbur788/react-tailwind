{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","console","log","className","src","urls","full","alt","alt_description","user","name","likes","tags","map","tag","index","key","title","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","results","catch","err","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLA8BeA,EA5BG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAGjB,OAFAC,QAAQC,IAAIF,GAGR,yBAAKG,UAAU,8CACX,yBAAKC,IAAKJ,EAAMK,KAAKC,KAAMC,IAAKP,EAAMQ,gBAAiBL,UAAU,WACjE,yBAAKA,UAAU,aACX,yBAAKA,UAAU,0CAAf,YACUH,EAAMS,KAAKC,MAErB,4BACI,4BACI,0CACCV,EAAMW,SAInB,yBAAKR,UAAU,aACVH,EAAMY,KAAKC,KAAI,SAACC,EAAKC,GAAN,OACZ,0BAAMC,IAAKD,EAAOZ,UAAU,4FAA5B,IACEW,EAAIG,aCIXC,EAxBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KASpC,OACI,yBAAKnB,UAAU,kDACX,0BAAMoB,SARG,SAACC,GACdA,EAAEC,iBAEFN,EAAWE,IAKmBlB,UAAU,mBAChC,yBAAKA,UAAU,8DACX,2BAAOuB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQzB,UAAU,kHAAkH0B,KAAK,OAAOC,YAAY,yBACnM,4BAAQ3B,UAAU,iIAAiI0B,KAAK,UAAxJ,cCoBLE,MAhCf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEqBb,oBAAS,GAF9B,mBAENc,EAFM,KAEKC,EAFL,OAGWf,mBAAS,QAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAeb,OAVAC,qBAAU,WACRC,MAAM,oDAAD,OAAqDC,8CAArD,yBAA4GJ,IAC9GK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,SACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAI9C,QAAQC,IAAI6C,QAC3B,CAACX,IAGF,yBAAKjC,UAAU,qBACb,kBAAC,EAAD,CAAagB,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAEzCa,GAA+B,IAAlBF,EAAOgB,QAAgB,wBAAI7C,UAAU,sCAAd,mBAGrC+B,EAAY,wBAAI/B,UAAU,sCAAd,cACb,yBAAKA,UAAU,0BACZ6B,EAAOnB,KAAI,SAAAb,GAAK,OACf,kBAAC,EAAD,CAAWgB,IAAKhB,EAAMiD,GAAIjD,MAAOA,UCxB3CkD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.3c83d680.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ImageCard = ({ image }) => {\r\n    console.log(image)\r\n\r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n            <img src={image.urls.full} alt={image.alt_description} className=\"w-full\"/>\r\n            <div className=\"px-6 py-4\">\r\n                <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n                Photo by {image.user.name}\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        <strong>Like: </strong>\r\n                        {image.likes}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"px-6 py-4\">\r\n                {image.tags.map((tag, index) => (\r\n                    <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\r\n                    #{tag.title}\r\n                    </span>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageCard\r\n","import React, { useState } from 'react';\r\n\r\nconst ImageSearch = ({ searchText }) => {\r\n    const [text, setText] = useState('');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        searchText(text);\r\n    }\r\n\r\n    return (\r\n        <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\r\n            <form onSubmit={onSubmit} className='w-full max-w-sm'>\r\n                <div className='flex items-center border-b border-b-2 border-teal-500 py-2'>\r\n                    <input onChange={e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search Image Term...\"/>\r\n                    <button className='flex-srink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded' type=\"submit\">\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSearch\r\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('dogs');\n\n  useEffect(() => {\n    fetch(`https://api.unsplash.com/search/photos?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}&page=1&query=${term}`)\n      .then(res => res.json())\n      .then(data => {\n        setImages(data.results);\n        setIsLoading(false);\n      })\n      .catch(err => console.log(err));\n  }, [term]);\n \n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)}/>\n\n      {!isLoading && images.length === 0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1>\n      }\n\n      {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1> :\n      <div className=\"grid grid-cols-3 gap-4\"> \n        {images.map(image => (\n          <ImageCard key={image.id} image={image}/>\n        ))}\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}